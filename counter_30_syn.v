// megafunction wizard: %LPM_COUNTER%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: LPM_COUNTER 

// ============================================================
// File Name: counter_30.v
// Megafunction Name(s):
// 			LPM_COUNTER
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 13.0.1 Build 232 06/12/2013 SP 1 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2013 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_counter DEVICE_FAMILY="Cyclone II" lpm_direction="UP" lpm_port_updown="PORT_UNUSED" lpm_width=30 clock q
//VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_counter 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463


//synthesis_resources = lut 30 reg 30 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  counter_30_cntr
	( 
	clock,
	q) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	output   [29:0]  q;

	wire  [0:0]   wire_counter_comb_bita_0combout;
	wire  [0:0]   wire_counter_comb_bita_1combout;
	wire  [0:0]   wire_counter_comb_bita_2combout;
	wire  [0:0]   wire_counter_comb_bita_3combout;
	wire  [0:0]   wire_counter_comb_bita_4combout;
	wire  [0:0]   wire_counter_comb_bita_5combout;
	wire  [0:0]   wire_counter_comb_bita_6combout;
	wire  [0:0]   wire_counter_comb_bita_7combout;
	wire  [0:0]   wire_counter_comb_bita_8combout;
	wire  [0:0]   wire_counter_comb_bita_9combout;
	wire  [0:0]   wire_counter_comb_bita_10combout;
	wire  [0:0]   wire_counter_comb_bita_11combout;
	wire  [0:0]   wire_counter_comb_bita_12combout;
	wire  [0:0]   wire_counter_comb_bita_13combout;
	wire  [0:0]   wire_counter_comb_bita_14combout;
	wire  [0:0]   wire_counter_comb_bita_15combout;
	wire  [0:0]   wire_counter_comb_bita_16combout;
	wire  [0:0]   wire_counter_comb_bita_17combout;
	wire  [0:0]   wire_counter_comb_bita_18combout;
	wire  [0:0]   wire_counter_comb_bita_19combout;
	wire  [0:0]   wire_counter_comb_bita_20combout;
	wire  [0:0]   wire_counter_comb_bita_21combout;
	wire  [0:0]   wire_counter_comb_bita_22combout;
	wire  [0:0]   wire_counter_comb_bita_23combout;
	wire  [0:0]   wire_counter_comb_bita_24combout;
	wire  [0:0]   wire_counter_comb_bita_25combout;
	wire  [0:0]   wire_counter_comb_bita_26combout;
	wire  [0:0]   wire_counter_comb_bita_27combout;
	wire  [0:0]   wire_counter_comb_bita_28combout;
	wire  [0:0]   wire_counter_comb_bita_29combout;
	wire  [0:0]   wire_counter_comb_bita_0cout;
	wire  [0:0]   wire_counter_comb_bita_1cout;
	wire  [0:0]   wire_counter_comb_bita_2cout;
	wire  [0:0]   wire_counter_comb_bita_3cout;
	wire  [0:0]   wire_counter_comb_bita_4cout;
	wire  [0:0]   wire_counter_comb_bita_5cout;
	wire  [0:0]   wire_counter_comb_bita_6cout;
	wire  [0:0]   wire_counter_comb_bita_7cout;
	wire  [0:0]   wire_counter_comb_bita_8cout;
	wire  [0:0]   wire_counter_comb_bita_9cout;
	wire  [0:0]   wire_counter_comb_bita_10cout;
	wire  [0:0]   wire_counter_comb_bita_11cout;
	wire  [0:0]   wire_counter_comb_bita_12cout;
	wire  [0:0]   wire_counter_comb_bita_13cout;
	wire  [0:0]   wire_counter_comb_bita_14cout;
	wire  [0:0]   wire_counter_comb_bita_15cout;
	wire  [0:0]   wire_counter_comb_bita_16cout;
	wire  [0:0]   wire_counter_comb_bita_17cout;
	wire  [0:0]   wire_counter_comb_bita_18cout;
	wire  [0:0]   wire_counter_comb_bita_19cout;
	wire  [0:0]   wire_counter_comb_bita_20cout;
	wire  [0:0]   wire_counter_comb_bita_21cout;
	wire  [0:0]   wire_counter_comb_bita_22cout;
	wire  [0:0]   wire_counter_comb_bita_23cout;
	wire  [0:0]   wire_counter_comb_bita_24cout;
	wire  [0:0]   wire_counter_comb_bita_25cout;
	wire  [0:0]   wire_counter_comb_bita_26cout;
	wire  [0:0]   wire_counter_comb_bita_27cout;
	wire  [0:0]   wire_counter_comb_bita_28cout;
	wire  [29:0]   wire_counter_reg_bit1a_regout;
	wire  [29:0]   wire_counter_reg_bit1a_sdata;
	wire  aclr_actual;
	wire clk_en;
	wire cnt_en;
	wire [29:0]  data;
	wire  external_cin;
	wire  [29:0]  s_val;
	wire  [29:0]  safe_q;
	wire sclr;
	wire sload;
	wire sset;
	wire  updown_dir;

	cycloneii_lcell_comb   counter_comb_bita_0
	( 
	.cin(external_cin),
	.combout(wire_counter_comb_bita_0combout[0:0]),
	.cout(wire_counter_comb_bita_0cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[0:0]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_0.lut_mask = 16'h5A90,
		counter_comb_bita_0.sum_lutc_input = "cin",
		counter_comb_bita_0.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_1
	( 
	.cin(wire_counter_comb_bita_0cout[0:0]),
	.combout(wire_counter_comb_bita_1combout[0:0]),
	.cout(wire_counter_comb_bita_1cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[1:1]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_1.lut_mask = 16'h5A90,
		counter_comb_bita_1.sum_lutc_input = "cin",
		counter_comb_bita_1.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_2
	( 
	.cin(wire_counter_comb_bita_1cout[0:0]),
	.combout(wire_counter_comb_bita_2combout[0:0]),
	.cout(wire_counter_comb_bita_2cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[2:2]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_2.lut_mask = 16'h5A90,
		counter_comb_bita_2.sum_lutc_input = "cin",
		counter_comb_bita_2.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_3
	( 
	.cin(wire_counter_comb_bita_2cout[0:0]),
	.combout(wire_counter_comb_bita_3combout[0:0]),
	.cout(wire_counter_comb_bita_3cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[3:3]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_3.lut_mask = 16'h5A90,
		counter_comb_bita_3.sum_lutc_input = "cin",
		counter_comb_bita_3.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_4
	( 
	.cin(wire_counter_comb_bita_3cout[0:0]),
	.combout(wire_counter_comb_bita_4combout[0:0]),
	.cout(wire_counter_comb_bita_4cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[4:4]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_4.lut_mask = 16'h5A90,
		counter_comb_bita_4.sum_lutc_input = "cin",
		counter_comb_bita_4.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_5
	( 
	.cin(wire_counter_comb_bita_4cout[0:0]),
	.combout(wire_counter_comb_bita_5combout[0:0]),
	.cout(wire_counter_comb_bita_5cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[5:5]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_5.lut_mask = 16'h5A90,
		counter_comb_bita_5.sum_lutc_input = "cin",
		counter_comb_bita_5.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_6
	( 
	.cin(wire_counter_comb_bita_5cout[0:0]),
	.combout(wire_counter_comb_bita_6combout[0:0]),
	.cout(wire_counter_comb_bita_6cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[6:6]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_6.lut_mask = 16'h5A90,
		counter_comb_bita_6.sum_lutc_input = "cin",
		counter_comb_bita_6.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_7
	( 
	.cin(wire_counter_comb_bita_6cout[0:0]),
	.combout(wire_counter_comb_bita_7combout[0:0]),
	.cout(wire_counter_comb_bita_7cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[7:7]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_7.lut_mask = 16'h5A90,
		counter_comb_bita_7.sum_lutc_input = "cin",
		counter_comb_bita_7.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_8
	( 
	.cin(wire_counter_comb_bita_7cout[0:0]),
	.combout(wire_counter_comb_bita_8combout[0:0]),
	.cout(wire_counter_comb_bita_8cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[8:8]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_8.lut_mask = 16'h5A90,
		counter_comb_bita_8.sum_lutc_input = "cin",
		counter_comb_bita_8.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_9
	( 
	.cin(wire_counter_comb_bita_8cout[0:0]),
	.combout(wire_counter_comb_bita_9combout[0:0]),
	.cout(wire_counter_comb_bita_9cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[9:9]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_9.lut_mask = 16'h5A90,
		counter_comb_bita_9.sum_lutc_input = "cin",
		counter_comb_bita_9.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_10
	( 
	.cin(wire_counter_comb_bita_9cout[0:0]),
	.combout(wire_counter_comb_bita_10combout[0:0]),
	.cout(wire_counter_comb_bita_10cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[10:10]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_10.lut_mask = 16'h5A90,
		counter_comb_bita_10.sum_lutc_input = "cin",
		counter_comb_bita_10.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_11
	( 
	.cin(wire_counter_comb_bita_10cout[0:0]),
	.combout(wire_counter_comb_bita_11combout[0:0]),
	.cout(wire_counter_comb_bita_11cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[11:11]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_11.lut_mask = 16'h5A90,
		counter_comb_bita_11.sum_lutc_input = "cin",
		counter_comb_bita_11.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_12
	( 
	.cin(wire_counter_comb_bita_11cout[0:0]),
	.combout(wire_counter_comb_bita_12combout[0:0]),
	.cout(wire_counter_comb_bita_12cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[12:12]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_12.lut_mask = 16'h5A90,
		counter_comb_bita_12.sum_lutc_input = "cin",
		counter_comb_bita_12.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_13
	( 
	.cin(wire_counter_comb_bita_12cout[0:0]),
	.combout(wire_counter_comb_bita_13combout[0:0]),
	.cout(wire_counter_comb_bita_13cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[13:13]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_13.lut_mask = 16'h5A90,
		counter_comb_bita_13.sum_lutc_input = "cin",
		counter_comb_bita_13.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_14
	( 
	.cin(wire_counter_comb_bita_13cout[0:0]),
	.combout(wire_counter_comb_bita_14combout[0:0]),
	.cout(wire_counter_comb_bita_14cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[14:14]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_14.lut_mask = 16'h5A90,
		counter_comb_bita_14.sum_lutc_input = "cin",
		counter_comb_bita_14.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_15
	( 
	.cin(wire_counter_comb_bita_14cout[0:0]),
	.combout(wire_counter_comb_bita_15combout[0:0]),
	.cout(wire_counter_comb_bita_15cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[15:15]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_15.lut_mask = 16'h5A90,
		counter_comb_bita_15.sum_lutc_input = "cin",
		counter_comb_bita_15.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_16
	( 
	.cin(wire_counter_comb_bita_15cout[0:0]),
	.combout(wire_counter_comb_bita_16combout[0:0]),
	.cout(wire_counter_comb_bita_16cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[16:16]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_16.lut_mask = 16'h5A90,
		counter_comb_bita_16.sum_lutc_input = "cin",
		counter_comb_bita_16.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_17
	( 
	.cin(wire_counter_comb_bita_16cout[0:0]),
	.combout(wire_counter_comb_bita_17combout[0:0]),
	.cout(wire_counter_comb_bita_17cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[17:17]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_17.lut_mask = 16'h5A90,
		counter_comb_bita_17.sum_lutc_input = "cin",
		counter_comb_bita_17.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_18
	( 
	.cin(wire_counter_comb_bita_17cout[0:0]),
	.combout(wire_counter_comb_bita_18combout[0:0]),
	.cout(wire_counter_comb_bita_18cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[18:18]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_18.lut_mask = 16'h5A90,
		counter_comb_bita_18.sum_lutc_input = "cin",
		counter_comb_bita_18.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_19
	( 
	.cin(wire_counter_comb_bita_18cout[0:0]),
	.combout(wire_counter_comb_bita_19combout[0:0]),
	.cout(wire_counter_comb_bita_19cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[19:19]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_19.lut_mask = 16'h5A90,
		counter_comb_bita_19.sum_lutc_input = "cin",
		counter_comb_bita_19.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_20
	( 
	.cin(wire_counter_comb_bita_19cout[0:0]),
	.combout(wire_counter_comb_bita_20combout[0:0]),
	.cout(wire_counter_comb_bita_20cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[20:20]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_20.lut_mask = 16'h5A90,
		counter_comb_bita_20.sum_lutc_input = "cin",
		counter_comb_bita_20.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_21
	( 
	.cin(wire_counter_comb_bita_20cout[0:0]),
	.combout(wire_counter_comb_bita_21combout[0:0]),
	.cout(wire_counter_comb_bita_21cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[21:21]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_21.lut_mask = 16'h5A90,
		counter_comb_bita_21.sum_lutc_input = "cin",
		counter_comb_bita_21.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_22
	( 
	.cin(wire_counter_comb_bita_21cout[0:0]),
	.combout(wire_counter_comb_bita_22combout[0:0]),
	.cout(wire_counter_comb_bita_22cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[22:22]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_22.lut_mask = 16'h5A90,
		counter_comb_bita_22.sum_lutc_input = "cin",
		counter_comb_bita_22.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_23
	( 
	.cin(wire_counter_comb_bita_22cout[0:0]),
	.combout(wire_counter_comb_bita_23combout[0:0]),
	.cout(wire_counter_comb_bita_23cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[23:23]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_23.lut_mask = 16'h5A90,
		counter_comb_bita_23.sum_lutc_input = "cin",
		counter_comb_bita_23.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_24
	( 
	.cin(wire_counter_comb_bita_23cout[0:0]),
	.combout(wire_counter_comb_bita_24combout[0:0]),
	.cout(wire_counter_comb_bita_24cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[24:24]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_24.lut_mask = 16'h5A90,
		counter_comb_bita_24.sum_lutc_input = "cin",
		counter_comb_bita_24.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_25
	( 
	.cin(wire_counter_comb_bita_24cout[0:0]),
	.combout(wire_counter_comb_bita_25combout[0:0]),
	.cout(wire_counter_comb_bita_25cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[25:25]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_25.lut_mask = 16'h5A90,
		counter_comb_bita_25.sum_lutc_input = "cin",
		counter_comb_bita_25.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_26
	( 
	.cin(wire_counter_comb_bita_25cout[0:0]),
	.combout(wire_counter_comb_bita_26combout[0:0]),
	.cout(wire_counter_comb_bita_26cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[26:26]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_26.lut_mask = 16'h5A90,
		counter_comb_bita_26.sum_lutc_input = "cin",
		counter_comb_bita_26.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_27
	( 
	.cin(wire_counter_comb_bita_26cout[0:0]),
	.combout(wire_counter_comb_bita_27combout[0:0]),
	.cout(wire_counter_comb_bita_27cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[27:27]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_27.lut_mask = 16'h5A90,
		counter_comb_bita_27.sum_lutc_input = "cin",
		counter_comb_bita_27.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_28
	( 
	.cin(wire_counter_comb_bita_27cout[0:0]),
	.combout(wire_counter_comb_bita_28combout[0:0]),
	.cout(wire_counter_comb_bita_28cout[0:0]),
	.dataa(wire_counter_reg_bit1a_regout[28:28]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_28.lut_mask = 16'h5A90,
		counter_comb_bita_28.sum_lutc_input = "cin",
		counter_comb_bita_28.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_comb   counter_comb_bita_29
	( 
	.cin(wire_counter_comb_bita_28cout[0:0]),
	.combout(wire_counter_comb_bita_29combout[0:0]),
	.cout(),
	.dataa(wire_counter_reg_bit1a_regout[29:29]),
	.datab(updown_dir),
	.datad(1'b1),
	.datac(1'b0)
	);
	defparam
		counter_comb_bita_29.lut_mask = 16'h5A90,
		counter_comb_bita_29.sum_lutc_input = "cin",
		counter_comb_bita_29.lpm_type = "cycloneii_lcell_comb";
	cycloneii_lcell_ff   counter_reg_bit1a_0
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_0combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[0:0]),
	.sdata(wire_counter_reg_bit1a_sdata[0:0]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_1
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_1combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[1:1]),
	.sdata(wire_counter_reg_bit1a_sdata[1:1]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_2
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_2combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[2:2]),
	.sdata(wire_counter_reg_bit1a_sdata[2:2]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_3
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_3combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[3:3]),
	.sdata(wire_counter_reg_bit1a_sdata[3:3]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_4
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_4combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[4:4]),
	.sdata(wire_counter_reg_bit1a_sdata[4:4]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_5
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_5combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[5:5]),
	.sdata(wire_counter_reg_bit1a_sdata[5:5]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_6
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_6combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[6:6]),
	.sdata(wire_counter_reg_bit1a_sdata[6:6]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_7
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_7combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[7:7]),
	.sdata(wire_counter_reg_bit1a_sdata[7:7]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_8
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_8combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[8:8]),
	.sdata(wire_counter_reg_bit1a_sdata[8:8]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_9
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_9combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[9:9]),
	.sdata(wire_counter_reg_bit1a_sdata[9:9]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_10
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_10combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[10:10]),
	.sdata(wire_counter_reg_bit1a_sdata[10:10]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_11
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_11combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[11:11]),
	.sdata(wire_counter_reg_bit1a_sdata[11:11]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_12
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_12combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[12:12]),
	.sdata(wire_counter_reg_bit1a_sdata[12:12]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_13
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_13combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[13:13]),
	.sdata(wire_counter_reg_bit1a_sdata[13:13]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_14
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_14combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[14:14]),
	.sdata(wire_counter_reg_bit1a_sdata[14:14]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_15
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_15combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[15:15]),
	.sdata(wire_counter_reg_bit1a_sdata[15:15]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_16
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_16combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[16:16]),
	.sdata(wire_counter_reg_bit1a_sdata[16:16]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_17
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_17combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[17:17]),
	.sdata(wire_counter_reg_bit1a_sdata[17:17]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_18
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_18combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[18:18]),
	.sdata(wire_counter_reg_bit1a_sdata[18:18]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_19
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_19combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[19:19]),
	.sdata(wire_counter_reg_bit1a_sdata[19:19]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_20
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_20combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[20:20]),
	.sdata(wire_counter_reg_bit1a_sdata[20:20]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_21
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_21combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[21:21]),
	.sdata(wire_counter_reg_bit1a_sdata[21:21]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_22
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_22combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[22:22]),
	.sdata(wire_counter_reg_bit1a_sdata[22:22]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_23
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_23combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[23:23]),
	.sdata(wire_counter_reg_bit1a_sdata[23:23]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_24
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_24combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[24:24]),
	.sdata(wire_counter_reg_bit1a_sdata[24:24]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_25
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_25combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[25:25]),
	.sdata(wire_counter_reg_bit1a_sdata[25:25]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_26
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_26combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[26:26]),
	.sdata(wire_counter_reg_bit1a_sdata[26:26]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_27
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_27combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[27:27]),
	.sdata(wire_counter_reg_bit1a_sdata[27:27]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_28
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_28combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[28:28]),
	.sdata(wire_counter_reg_bit1a_sdata[28:28]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	cycloneii_lcell_ff   counter_reg_bit1a_29
	( 
	.aclr(aclr_actual),
	.clk(clock),
	.datain(wire_counter_comb_bita_29combout[0:0]),
	.ena((clk_en & (((sclr | sset) | sload) | cnt_en))),
	.regout(wire_counter_reg_bit1a_regout[29:29]),
	.sdata(wire_counter_reg_bit1a_sdata[29:29]),
	.sload(((sclr | sset) | sload)),
	.sclr(1'b0)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	assign
		wire_counter_reg_bit1a_sdata = ({30{(~ sclr)}} & (({30{sset}} & s_val) | ({30{(~ sset)}} & data)));
	assign
		aclr_actual = 1'b0,
		clk_en = 1'b1,
		cnt_en = 1'b1,
		data = {30{1'b0}},
		external_cin = 1'b1,
		q = safe_q,
		s_val = {30{1'b1}},
		safe_q = wire_counter_reg_bit1a_regout,
		sclr = 1'b0,
		sload = 1'b0,
		sset = 1'b0,
		updown_dir = 1'b1;
endmodule //counter_30_cntr
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module counter_30 (
	clock,
	q)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	output	[29:0]  q;

	wire [29:0] sub_wire0;
	wire [29:0] q = sub_wire0[29:0];

	counter_30_cntr	counter_30_cntr_component (
				.clock (clock),
				.q (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: ACLR NUMERIC "0"
// Retrieval info: PRIVATE: ALOAD NUMERIC "0"
// Retrieval info: PRIVATE: ASET NUMERIC "0"
// Retrieval info: PRIVATE: ASET_ALL1 NUMERIC "1"
// Retrieval info: PRIVATE: CLK_EN NUMERIC "0"
// Retrieval info: PRIVATE: CNT_EN NUMERIC "0"
// Retrieval info: PRIVATE: CarryIn NUMERIC "0"
// Retrieval info: PRIVATE: CarryOut NUMERIC "0"
// Retrieval info: PRIVATE: Direction NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: PRIVATE: ModulusCounter NUMERIC "0"
// Retrieval info: PRIVATE: ModulusValue NUMERIC "0"
// Retrieval info: PRIVATE: SCLR NUMERIC "0"
// Retrieval info: PRIVATE: SLOAD NUMERIC "0"
// Retrieval info: PRIVATE: SSET NUMERIC "0"
// Retrieval info: PRIVATE: SSET_ALL1 NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: nBit NUMERIC "30"
// Retrieval info: PRIVATE: new_diagram STRING "1"
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: CONSTANT: LPM_DIRECTION STRING "UP"
// Retrieval info: CONSTANT: LPM_PORT_UPDOWN STRING "PORT_UNUSED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_COUNTER"
// Retrieval info: CONSTANT: LPM_WIDTH NUMERIC "30"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: q 0 0 30 0 OUTPUT NODEFVAL "q[29..0]"
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: q 0 0 30 0 @q 0 0 30 0
// Retrieval info: GEN_FILE: TYPE_NORMAL counter_30.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL counter_30.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL counter_30.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL counter_30.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL counter_30_inst.vhd TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL counter_30_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
